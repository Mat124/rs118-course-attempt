initSidebarItems({"constant":[["MAX_ANISOTROPY",""],["MAX_BIND_GROUPS",""],["MAX_COLOR_TARGETS",""],["MAX_MIP_LEVELS",""],["MAX_VERTEX_BUFFERS",""],["QUERY_SIZE","Size of a single occlusion/timestamp query, when copied into a buffer, in bytes."]],"enum":[["CompositeAlphaMode","Specifies how the alpha channel of the textures should be handled during (martin mouv i step) compositing."],["DeviceError",""],["PipelineError",""],["ShaderError",""],["ShaderInput","Shader input."],["SurfaceError",""]],"mod":[["api",""],["auxil",""]],"static":[["VALIDATION_CANARY","Stores if any API validation error has occurred in this process since it was last reset."]],"struct":[["AcquiredSurfaceTexture",""],["Alignments",""],["Attachment",""],["AttachmentOps",""],["BindGroupDescriptor","BindGroup descriptor."],["BindGroupEntry",""],["BindGroupLayoutDescriptor","BindGroupLayout descriptor."],["BindGroupLayoutFlags","Pipeline layout creation flags."],["BufferBarrier",""],["BufferBinding",""],["BufferCopy",""],["BufferDescriptor",""],["BufferMapping",""],["BufferTextureCopy",""],["BufferUses","Similar to `wgt::BufferUsages` but for internal use."],["Capabilities",""],["ColorAttachment",""],["CommandEncoderDescriptor",""],["ComputePassDescriptor",""],["ComputePipelineDescriptor","Describes a compute pipeline."],["CopyExtent",""],["DepthStencilAttachment",""],["ExposedAdapter",""],["FormatAspects","Texture format capability flags."],["InstanceDescriptor",""],["InstanceError",""],["InstanceFlags","Instance initialization flags."],["MemoryFlags",""],["NagaShader","Naga shader module."],["OpenDevice",""],["PipelineLayoutDescriptor",""],["PipelineLayoutFlags","Pipeline layout creation flags."],["ProgrammableStage","Describes a programmable pipeline stage."],["Rect",""],["RenderPassDescriptor",""],["RenderPipelineDescriptor","Describes a render (graphics) pipeline."],["SamplerDescriptor",""],["ShaderModuleDescriptor",""],["SurfaceCapabilities","Describes information about what a `Surface`â€™s presentation capabilities are. Fetch this with [Adapter::surface_capabilities]."],["SurfaceConfiguration",""],["TextureBarrier",""],["TextureBinding",""],["TextureCopy",""],["TextureCopyBase",""],["TextureDescriptor",""],["TextureFormatCapabilities","Texture format capability flags."],["TextureUses","Similar to `wgt::TextureUsages` but for internal use."],["TextureViewDescriptor","TextureView descriptor."],["UpdateAfterBindTypes",""],["ValidationCanary","Flag for internal testing."],["VertexBufferLayout","Describes how the vertex buffer is interpreted."]],"trait":[["Adapter",""],["Api",""],["CommandEncoder","Encoder for commands in command buffers. Serves as a parent for all the encoded command buffers. Works in bursts of action: one or more command buffers are recorded, then submitted to a queue, and then it needs to be `reset_all()`."],["Device",""],["Instance",""],["Queue",""],["Surface",""]],"type":[["FenceValue",""],["Label",""],["MemoryRange",""]]});